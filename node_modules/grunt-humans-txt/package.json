{
  "name": "grunt-humans-txt",
  "description": "Grunt task to build a humans.txt file using data from any JSON file, i.e package.json file or directly from your Gruntfile. A humans.txt is a TXT file that contains information about the different people who have contributed to building the website.",
  "version": "0.2.1",
  "homepage": "https://github.com/roughcoder/grunt-humans-txt",
  "author": {
    "name": "Neil Barton",
    "email": "neil@roughcoder.com"
  },
  "contributors": {
    "name": "Robin PokornÃ½",
    "email": "robin@medvedi.eu",
    "url": "http://robin.medvedi.eu"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/roughcoder/grunt-humans-txt"
  },
  "bugs": {
    "url": "https://github.com/roughcoder/grunt-humans-txt/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/roughcoder/grunt-humans-txt/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-cli": "~0.1.0",
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-humans-txt\n\n> Generate a [humans.txt](http://humanstxt.org/) file for the website.\n\n[![Build Status](https://travis-ci.org//roughcoder/grunt-humans-txt.png)](https://travis-ci.org/roughcoder/grunt-humans-txt)\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-humans-txt --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-humans-txt');\n```\n\n## The \"humans_txt\" task\n\n### Overview\n_Run this task with the `grunt humans_txt` command._\n\nThe task creates a humans.txt file using data from any JSON file, i.e package.json file or directly from your Gruntfile. A humans.txt is a TXT file that contains information about the different people who have contributed to building the website.\n\nTask targets, files and options may be specified according to the grunt [Configuring tasks](http://gruntjs.com/configuring-tasks) guide.\n\n### Options\n\n#### intro\nType: `String`\nDefault value: `'The humans responsible & colophon'`\n\nA string value that is used in the head of the file.\n\n\n#### commentStyle\nChoices: `'c'`, `'u'`, `'p'`\nDefault value: `'c'`\n\nStyle of comments with section titles. Use `'c'` for C style, `'u'` for unix\nstyle, and `'p'` for PHP style.\n\n```\n/* C STYLE COMMENT */\n\n# UNIX STYLE COMMENT\n\n// PHP STYLE COMMENT\n```\n\n#### tab\nType: `String`\nDefault value: `'\\t'`\n\nA string value that is used to advance nested values.\n\n\n#### includeUpdateIn\nType: `String` or `false`\nDefault value: `'site'`\n\nInclude current date as *Last update* in section with specified name. Set to `false` to disable.\n\n### Usage Examples\n\n#### Local Content\nIn this example, the `content` options includes the data to be used. Each root item\nis a section.\n\n```js\ngrunt.initConfig({\n  pkg: grunt.file.readJSON('package.json'),\n  humans_txt: {\n    options: {\n      commentStyle: 'u',\n      content: {\n        'team': [ {\n          'Web developer': 'Neil Barton',\n          'Site': 'http://www.roughcoder.com',\n          'Twitter': '@roughcoder',\n          'Location': 'London, UK'\n\n          },\n          {\n            'Ruby guy': 'Sam Jones',\n            'Site': 'http://www.samjones.com',\n            'Twitter': '@samjones'\n          }\n        ],\n        'thanks': [\n          {\n            'Name': 'David Jones',\n            'Website': 'www.google.com'\n          }\n        ],\n        'site': [ {\n            'Version': '<%= pkg.version %>',\n            'Site Url': '<%= pkg.homepage %>',\n            'Keywords': '<%= pkg.keywords %>',\n            'Language': 'English',\n            'Technology': 'node.js, apache'\n          }\n        ]\n      },\n    },\n    dest: 'humans.txt', \n  },\n})\n```\n\n#### External Content\nIn this example, the content is read from external file.\n\n```js\ngrunt.initConfig({\n  humans_txt: {\n    options: {\n      content: grunt.file.readJSON('humans.json')\n    },\n    dest: 'humans.txt', \n  },\n})\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n* 2013-09-09   v0.2.1   Test tweak to allow Travis\n* 2013-08-20   v0.2.0   Extended variability, tests\n* 2013-06-11   v0.1.0   Initial task.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-humans-txt@0.2.1",
  "_from": "grunt-humans-txt@~0.2.1"
}
