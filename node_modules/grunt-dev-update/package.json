{
  "name": "grunt-dev-update",
  "version": "0.3.2",
  "description": "Update your npm package.json devDependencies with a grunt task",
  "homepage": "http://pgilad.github.io/grunt-dev-update",
  "bugs": {
    "url": "https://github.com/pgilad/grunt-dev-update/issues"
  },
  "author": {
    "name": "Gilad Peleg",
    "email": "giladp007@gmail.com"
  },
  "keywords": [
    "gruntplugin",
    "devDependencies",
    "npm install",
    "save-dev",
    "automation",
    "updates"
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/pgilad/grunt-dev-update"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "devDependencies": {
    "grunt-contrib-jshint": "~0.7.2",
    "grunt-contrib-nodeunit": "~0.2.2",
    "grunt-contrib-clean": "~0.5.0",
    "jshint-stylish": "~0.1.4"
  },
  "dependencies": {
    "matchdep": "~0.3.0",
    "async": "~0.2.9",
    "lodash": "~2.4.1",
    "inquirer": "~0.3.5",
    "progress": "~1.1.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "scripts": {
    "test": "grunt test"
  },
  "readme": "# grunt-dev-update [![Built with Grunt](https://cdn.gruntjs.com/builtwith.png)](http://gruntjs.com/)\r\n\r\n> Automatically update your npm package.json devDependencies with a grunt task\r\n\r\n## Getting Started\r\nThis plugin requires Grunt.\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-dev-update --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-dev-update');\r\n```\r\n\r\nAn alternative and highly recommended way to load all grunt npm tasks is installing `matchdep`:\r\n```js\r\nnpm install matchdep --save-dev\r\n```\r\n\r\nAnd then add to your grunt file:\r\n```js\r\nrequire('matchdep').filterDev('grunt-*').forEach(grunt.loadNpmTasks);\r\n```\r\n\r\n\r\n## The \"devUpdate\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `devUpdate` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  devUpdate: {\r\n\r\n    your_target: {\r\n        options: {\r\n          // Target specific options go here\r\n        }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n### Options\r\n\r\n#### options.reportUpdated\r\nType: `Boolean`\r\nDefault value: `false`\r\n\r\nWhether to report an already updated package\r\n\r\n#### options.updateType\r\nType: `String`\r\nDefault value: `report`\r\n\r\nHow devUpdate should handle the outdated packages. Valid options:\r\n\r\n`report` - Just report that the package is outdated.\r\n\r\n`prompt` - Prompt user to confirm update of every package\r\n\r\n`force` - Automatically force the update for the outdated packages.\r\n\r\n### Usage Examples\r\n\r\n#### Default Options\r\nThis is a basic usage for devUpdate:\r\n\r\n```js\r\ngrunt.initConfig({\r\n  devUpdate: {\r\n    main: {\r\n        options: {\r\n            //should task report already updated dependencies\r\n            reportUpdated: false,\r\n            //can be 'force'|'report'|'prompt'\r\n            updateType   : \"report\"\r\n        }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n## Release History\r\n\r\n## License\r\nCopyright (c) 2013 Gilad Peleg. Licensed under the MIT license.",
  "readmeFilename": "README.md",
  "_id": "grunt-dev-update@0.3.2",
  "_from": "grunt-dev-update@~0.3.0"
}
